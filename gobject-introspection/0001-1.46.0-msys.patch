--- origsrc/gobject-introspection-1.46.0/Makefile-giscanner.am	2015-07-30 05:32:27.000000000 -0500
+++ src/gobject-introspection-1.46.0/Makefile-giscanner.am	2015-11-05 19:06:13.352644100 -0600
@@ -116,7 +116,7 @@ _giscanner_la_LIBADD = libgiscanner.la $
 _giscanner_la_LDFLAGS = \
 	-module -avoid-version -export-symbols-regex init_giscanner
 
-if OS_WIN32
+if PLATFORM_WIN32
 # Windows requires Python extension modules to be explicitly
 # linked to libpython. Extension modules are shared libaries
 # (.dll files), but need to be called .pyd for Python to load
@@ -125,8 +125,12 @@ _giscanner_la_LIBADD += \
 	$(PYTHON_LIBS)
 
 _giscanner_la_LDFLAGS += \
-	-no-undefined \
+	-no-undefined
+endif
+if OS_WIN32
+_giscanner_la_LDFLAGS += \
 	-shrext ".pyd"
 endif
 
+
 _giscanner_la_SOURCES = giscanner/giscannermodule.c
--- origsrc/gobject-introspection-1.46.0/configure.ac	2015-09-22 06:24:07.000000000 -0500
+++ src/gobject-introspection-1.46.0/configure.ac	2015-11-05 19:06:13.352644100 -0600
@@ -29,13 +29,20 @@ AC_SUBST(GI_VERSION)
 # Check for Win32
 AC_CANONICAL_HOST
 case "$host" in
+*-*-cygwin*|*-*-msys*)
+	platform_win32=yes
+	os_win32=no
+	;;
 *-*-mingw*)
+	platform_win32=yes
 	os_win32=yes
 	;;
 *)
+	platform_win32=no
 	os_win32=no
 	;;
 esac
+AM_CONDITIONAL(PLATFORM_WIN32, [test "x$platform_win32" = "xyes"])
 AM_CONDITIONAL(OS_WIN32, [test "x$os_win32" = "xyes"])
 
 # Checks for programs.
@@ -149,6 +156,12 @@ AS_IF([test x${with_cairo} != xno], [
 AM_CONDITIONAL(HAVE_CAIRO, test x$have_cairo = xyes)
 
 case "$host" in
+  *-*-cygwin*)
+    CAIRO_SHARED_LIBRARY="cygcairo-gobject-2.dll"
+    ;;
+  *-*-msys*)
+    CAIRO_SHARED_LIBRARY="msys-cairo-gobject-2.dll"
+    ;;
   *-*-darwin*)
     CAIRO_SHARED_LIBRARY="libcairo-gobject.2.dylib"
     ;;
@@ -260,7 +270,7 @@ case "$host" in
 	;;
 esac
 AM_CHECK_PYTHON_HEADERS(, AC_MSG_ERROR([Python headers not found]))
-if test "x$os_win32" = "xyes"; then
+if test "x$platform_win32" = "xyes"; then
   AM_CHECK_PYTHON_LIBS(, AC_MSG_ERROR([Python libs not found. Windows requires Python modules to be explicitly linked to libpython.]))
 fi
 
--- origsrc/gobject-introspection-1.46.0/girepository/girepository.c	2015-07-30 05:32:27.000000000 -0500
+++ src/gobject-introspection-1.46.0/girepository/girepository.c	2015-11-05 19:06:13.352644100 -0600
@@ -58,7 +58,7 @@ struct _GIRepositoryPrivate
 
 G_DEFINE_TYPE (GIRepository, g_irepository, G_TYPE_OBJECT);
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 
 #include <windows.h>
 
--- origsrc/gobject-introspection-1.52.1/giscanner/ccompiler.py	2017-12-19 22:54:14.839922700 -0600
+++ src/gobject-introspection-1.52.1/giscanner/ccompiler.py	2017-12-19 23:14:22.612680700 -0600
@@ -118,6 +118,10 @@ class CCompiler(object):
 
         if self.check_is_msvc():
             runtime_path_envvar = ['LIB', 'PATH']
+        elif os.name == 'nt' or sys.platform == 'cygwin' or sys.platform == 'msys':
+            runtime_path_envvar = ['PATH']
+            # Search the current directory first
+            args.append('-L.')
         else:
             runtime_path_envvar = ['LD_LIBRARY_PATH']
             # Search the current directory first
--- origsrc/gobject-introspection-1.46.0/giscanner/shlibs.py	2015-07-18 08:27:49.000000000 -0500
+++ src/gobject-introspection-1.46.0/giscanner/shlibs.py	2015-11-05 19:06:13.372644100 -0600
@@ -56,6 +56,10 @@ def _ldd_library_pattern(library_name):
     pattern = "(?<![A-Za-z0-9_-])(lib*%s[^A-Za-z0-9_-][^\s\(\)]*)"
     if platform.system() == 'Darwin':
         pattern = "([^\s]*lib*%s[^A-Za-z0-9_-][^\s\(\)]*)"
+    elif platform.platform().startswith('CYGWIN'):
+        pattern = "([^\s]*cyg*%s[^A-Za-z0-9_][^\s\(\)]*)"
+    elif platform.platform().startswith('MSYS'):
+        pattern  =  "([^\s]*msys*-%s[^A-Za-z0-9_][^\s\(\)]*)"
     return re.compile(pattern % re.escape(library_name))
 
 
--- origsrc/gobject-introspection-1.46.0/giscanner/utils.py	2015-08-21 07:03:01.000000000 -0500
+++ src/gobject-introspection-1.46.0/giscanner/utils.py	2015-11-05 19:06:13.372644100 -0600
@@ -76,7 +76,7 @@ def to_underscores_noprefix(name):
     return name
 
 
-_libtool_pat = re.compile("dlname='([A-z0-9\.\-\+]+)'\n")
+_libtool_pat = re.compile("dlname='([A-z0-9/\.\-\+]+)'\n")
 
 
 def _extract_dlname_field(la_file):
--- origsrc/gobject-introspection-1.46.0/tests/Makefile.am	2014-09-17 08:06:32.000000000 -0500
+++ src/gobject-introspection-1.46.0/tests/Makefile.am	2015-11-05 19:06:13.372644100 -0600
@@ -20,7 +20,12 @@ tests_DATA =		    \
 EXTRA_LTLIBRARIES = libeverything-1.0.la libgimarshallingtests-1.0.la
 
 libeverything_1_0_la_SOURCES = everything.c
+libeverything_1_0_la_LDFLAGS = -no-undefined
+libeverything_1_0_la_LIBADD = $(GOBJECT_LIBS)
+
 libgimarshallingtests_1_0_la_SOURCES = gimarshallingtests.c
+libgimarshallingtests_1_0_la_LDFLAGS = -no-undefined
+libgimarshallingtests_1_0_la_LIBADD = $(GOBJECT_LIBS)
 
 EXTRA_DIST += \
 	gimarshallingtests.h \
--- origsrc/gobject-introspection-1.46.0/tests/offsets/Makefile.am	2015-07-18 08:27:49.000000000 -0500
+++ src/gobject-introspection-1.46.0/tests/offsets/Makefile.am	2015-11-05 19:06:13.382644100 -0600
@@ -18,7 +18,7 @@ liboffsets_la_SOURCES = \
 	offsets.c
 liboffsets_la_CPPFLAGS = $(GIREPO_CFLAGS) $(GI_HIDDEN_VISIBILITY_CFLAGS) -I$(top_srcdir)/tests
 # dummy rpath to get built dynamically (huh?)
-liboffsets_la_LDFLAGS = -avoid-version -rpath $(libdir)
+liboffsets_la_LDFLAGS = -avoid-version -rpath $(libdir) -no-undefined
 
 Offsets-1.0.gir: liboffsets.la offsets.h
 Offsets_1_0_gir_INCLUDES = GObject-2.0
--- origsrc/gobject-introspection-1.46.0/tests/scanner/Makefile.am	2015-11-05 19:00:52.168166500 -0600
+++ src/gobject-introspection-1.46.0/tests/scanner/Makefile.am	2015-11-05 19:15:38.186456000 -0600
@@ -68,7 +68,7 @@ endif
 libregress_la_LDFLAGS = $(AM_LDFLAGS)
 
 
-if OS_WIN32
+if PLATFORM_WIN32
 AM_LDFLAGS += -no-undefined
 endif
 
@@ -155,7 +155,7 @@ barapp_SOURCES = $(srcdir)/barapp.c $(sr
 barapp_LDADD = $(top_builddir)/libgirepository-1.0.la
 barapp_LDFLAGS = -export-dynamic
 
-Bar-1.0.gir: barapp
+Bar-1.0.gir: barapp$(EXEEXT)
 Bar_1_0_gir_PACKAGES = gobject-2.0
 Bar_1_0_gir_PROGRAM = ./barapp$(EXEEXT)
 Bar_1_0_gir_CFLAGS = $(GI_SCANNER_CFLAGS)
