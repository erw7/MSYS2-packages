This is not an issue on Cygwin as all extensions must be linked against
their respective libpython on PE platforms.

index 7b2207085..57fb41fef 100644
--- a/src/if_python.c
+++ b/src/if_python.c
@@ -679,7 +679,7 @@ python_runtime_link_init(char *libname, int verbose)
     PYTHON_PROC *ucs_as_encoded_string =
 				   (PYTHON_PROC*)&py_PyUnicode_AsEncodedString;
 
-# if !(defined(PY_NO_RTLD_GLOBAL) && defined(PY3_NO_RTLD_GLOBAL)) && defined(UNIX) && defined(FEAT_PYTHON3)
+# if !(defined(PY_NO_RTLD_GLOBAL) && defined(PY3_NO_RTLD_GLOBAL)) && defined(UNIX) && !defined(__CYGWIN__) && defined(FEAT_PYTHON3)
     // Can't have Python and Python3 loaded at the same time.
     // It cause a crash, because RTLD_GLOBAL is needed for
     // standard C extension libraries of one or both python versions.
diff --git a/src/if_python3.c b/src/if_python3.c
index 8c22514b7..fddd8091a 100644
--- a/src/if_python3.c
+++ b/src/if_python3.c
@@ -662,7 +662,7 @@ py3_runtime_link_init(char *libname, int verbose)
     PYTHON_PROC *ucs_as_encoded_string =
 				 (PYTHON_PROC *)&py3_PyUnicode_AsEncodedString;
 
-# if !(defined(PY_NO_RTLD_GLOBAL) && defined(PY3_NO_RTLD_GLOBAL)) && defined(UNIX) && defined(FEAT_PYTHON)
+# if !(defined(PY_NO_RTLD_GLOBAL) && defined(PY3_NO_RTLD_GLOBAL)) && defined(UNIX) && !defined(__CYGWIN__) && defined(FEAT_PYTHON)
     // Can't have Python and Python3 loaded at the same time.
     // It cause a crash, because RTLD_GLOBAL is needed for
     // standard C extension libraries of one or both python versions.
